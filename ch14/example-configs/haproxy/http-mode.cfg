global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
    tune.ssl.default-dh-param 2048

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

frontend frontend:
	bind *:80
    bind *:443 ssl crt /etc/haproxy/certs/star.example.com.pem
    http-request redirect scheme https unless { ssl_fc }
	mode http

	acl host_rke-cluster-npd hdr(host) -i dev.example.com
	acl host_rke-cluster-npd hdr(host) -i qas.example.com
    use_backend rke-cluster-npd-https if host_a1-rke-cluster-npd

	acl host_rke-cluster-prd hdr(host) -i example.com
	acl host_rke-cluster-prd hdr(host) -i www.example.com
    use_backend rke-cluster-prd-https if host_a1-rke-cluster-prd


backend rke-cluster-npd-https
    mode http
    option httpchk HEAD /healthz HTTP/1.0
    server node01 192.168.1.101:443 check weight 1 maxconn 1024 ssl verify none
    server node02 192.168.1.102:443 check weight 1 maxconn 1024 ssl verify none
    server node03 192.168.1.103:443 check weight 1 maxconn 1024 ssl verify none

backend rke-cluster-prd-https
    mode http
    option httpchk HEAD /healthz HTTP/1.0
    server node04 192.168.1.104:443 check weight 1 maxconn 1024 ssl verify none
    server node05 192.168.1.105:443 check weight 1 maxconn 1024 ssl verify none
    server node06 192.168.1.106:443 check weight 1 maxconn 1024 ssl verify none
